<?php

/**
 * @file
 * Integration of the Infusion User Interface Options with Drupal.
 */

/**
 * Implements hook_help().
 */
function infusion_uio_help($path, $arg) {
  switch ($path) {
    case 'admin/help#infusion_uio': {
        $uiohelp = '<h3>' . t('About') . '</h3>';
        $uiohelp .= '<p>' . t('The Infusion User Interface Options module integrates the Infusion UIO component with Drupal.') . '</p>';
        $uiohelp .= '<p>' . t('Infusion\'s UI Options component allows users to personalize interfaces and content to meet individual needs and preferences.') . '</p>';
        $uiohelp .= '<p>' . t('It currently has the following features:') . '<ul>';
        $uiohelp .= '<li>' . t('Text Size') . '</li>';
        $uiohelp .= '<li>' . t('Text Style') . '</li>';
        $uiohelp .= '<li>' . t('Line Spacing') . '</li>';
        $uiohelp .= '<li>' . t('Colour and Contrast') . '</li>';
        $uiohelp .= '<li>' . t('Display Table of Contents') . '</li>';
        $uiohelp .= '<li>' . t('Emphasize Links') . '</li></ul></p>';
        return $uiohelp;
        break;
      }
  }
}

/**
 * Implements hook_menu().
 */
function infusion_uio_menu() {
  // Admin config page.
  $items['admin/config/user-interface/infusion-uio'] = array(
    'title' => 'Infusion UI Options settings',
    'description' => 'Configure Infusion User Interface Options',
    'access arguments' => array('administer site configuration'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('infusion_ui_settings_form'),
    'file' => 'infusion_uio.admin.inc'
  );
  $items['uio_full_page'] = array(
    'title' => 'Infusion UI Options Full Page Without Preview',
    'description' => 'Configure Infusion User Interface Options',
    'access callback' => 'user_access',
    'access arguments' => array('access content'),
    'page callback' => 'infusion_uio_fullpage',
    'type' => MENU_CALLBACK,
  );
  $items['uio_full_page_preview'] = array(
    'title' => 'Infusion UI Options Full Page With Preview',
    'description' => 'Configure Infusion User Interface Options',
    'access callback' => 'user_access',
    'access arguments' => array('access content'),
    'page callback' => 'infusion_uio_fullpage_preview',
    'type' => MENU_CALLBACK,
  );
  $items['uio-fp-frame'] = array(
    'title' => 'Fat Panel Frame',
    'description' => 'Configure Infusion User Interface Options',
    'access callback' => 'user_access',
    'access arguments' => array('access content'),
    'page callback' => 'uio_fatpanel_frame',
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Ajax  callback for admin settings form.
 */
function infusion_uio_moreoptions_ajax($form, $form_state) {
  return $form['infusion_uio_more'];
}

/**
 * Implements hook_block_info().
 */
function infusion_uio_block_info() {
  $blocks['infusion_uio_link'] = array(
    'info' => t('UI Options Link'),
    'cache' => DRUPAL_NO_CACHE,
  );
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function infusion_uio_block_view($delta = '') {
  if ($delta == 'infusion_uio_link') {
    if (variable_get('infusion_uio_interface') == 'Full Page') {
      $content = l(t('UI Options'), 'uio_full_page');
    }
    else {
      $content = '';
    }
  }
  $block = array(
    'subject' => t('Infusion UIO'),
    'content' => $content,
  );
  return $block;
}

/**
 * Implements hook_libraries_info().
 *
 * For defining external libraries.
 */
function infusion_uio_libraries_info() {
  $libraries['infusion'] = array(
    'name' => 'Infusion',
    'vendor url' => 'http://www.fluidproject.org/',
    'download url' => 'http://builder.fluidproject.org/',
    'version arguments' => array(
      'file' => 'ReleaseNotes.txt',
      'pattern' => '/Infusion\s(\d(.)\d)/',
      'lines' => 2,
    ),
    'files' => array(
      'js' => array(
        'MyInfusion.js',
      ),
      'css' => array(
        'framework/fss/css/fss-reset-global.css',
        'framework/fss/css/fss-base-global.css',
        'framework/fss/css/fss-layout.css',
        'framework/fss/css/fss-text.css',
        'components/uiOptions/css/fss/fss-theme-bw-uio.css',
        'components/uiOptions/css/fss/fss-theme-wb-uio.css',
        'components/uiOptions/css/fss/fss-theme-by-uio.css',
        'components/uiOptions/css/fss/fss-theme-yb-uio.css',
        'components/uiOptions/css/fss/fss-text-uio.css',
        'components/uiOptions/css/UIOptions.css',
        'components/uiOptions/css/ie8.css',
//        'framework/fss/css/fss-theme-by.css',        
//        'components/uiOptions/css/fss/fss-theme-coal-uio.css',
//        'components/uiOptions/css/fss/fss-theme-mist-uio.css',
//        'components/uiOptions/css/fss/fss-theme-rust-uio.css',
//        'components/uiOptions/css/fss/fss-theme-slate-uio.css',
//        'framework/fss/css/fss-base-context.css',
//        'framework/fss/css/fss-JSR168Bridge.css',
//        'framework/fss/css/fss-mobile-layout.css',
//        'framework/fss/css/fss-mobile-theme-android.css',
//        'framework/fss/css/fss-mobile-theme-iphone.css',
//        'framework/fss/css/fss-reset-context.css',
//        'framework/fss/css/fss-reset.css',
//        'framework/fss/css/fss-theme-bw.css',
//        'framework/fss/css/fss-theme-coal.css',
//        'framework/fss/css/fss-theme-debug.css',
//        'framework/fss/css/fss-theme-hc.css',
//        'framework/fss/css/fss-theme-hci.css',
//        'framework/fss/css/fss-theme-mist.css',
//        'framework/fss/css/fss-theme-rust.css',
//        'framework/fss/css/fss-theme-slate.css',
//        'framework/fss/css/fss-theme-wb.css',
//        'framework/fss/css/fss-theme-yb.css',
//        'framework/fss/css/fss-transitions.css',
      )
    ),
  );
  return $libraries;
}

/**
 * Implements hook_page_alter().
 */
function infusion_uio_page_alter(&$vars) {
  //Load the Infusion library
  drupal_add_library('system', 'ui.tabs');
  drupal_add_library('system', 'ui.widget');
  drupal_add_library('system', 'ui.slider');
  drupal_add_library('system', 'ui.dialog');
  drupal_add_library('system', 'ui.draggable');
  drupal_add_library('system', 'ui.mouse');
  drupal_add_library('system', 'ui.position');
  libraries_load('infusion');
  $lib_path = $GLOBALS['base_url'] . '/' . libraries_get_path('infusion');

  //Define some settings for this module and pass it to Drupal.settings.
  $fatpanel_frame = url('uio-fp-frame');
  $uio_interface = variable_get('infusion_uio_interface', 'Fat Panel Options');
  $uio_fp_showbtn = variable_get('infusion_uio_show_btn', 'Preferences');
  $uio_fp_hidebtn = variable_get('infusion_uio_hide_btn', 'Preferences');
  $frontpage = url('<front>', array('absolute' => TRUE));
  $uio_settings = array(
    'uio_interface' => $uio_interface,
    'fp_show_btn' => $uio_fp_showbtn,
    'fp_hide_btn' => $uio_fp_hidebtn,
    'library_path' => $lib_path,
    'fatpanel_frame' => $fatpanel_frame,
    'full_preview_iframe' => $frontpage,
  );
  drupal_add_js(array('infusion_uio' => $uio_settings), 'setting');

  //Add the correct javascript file
  libraries_get_path('infusion') . $script = drupal_get_path('module', 'infusion_uio') . '/uioinit.js';
  $options = array('scope' => 'footer');
  drupal_add_js($script, $options);
  //Add another js file
  $script2 = drupal_get_path('module', 'infusion_uio') . '/functions.js';
  $options2 = array('scope' => 'footer');
  drupal_add_js($script2, $options2);
}

/**
 * Implements hook_preprocess_html().
 */
function infusion_uio_preprocess_html(&$variables) {
  //setup some variables
  $uio_path = $GLOBALS['base_url'] . '/' . libraries_get_path('infusion');

  //Add the Page Enhancer class to body tag
  $variables['classes_array'][] = 'uio-infusionmodule-theme';

  //Add the container divs for the different UIOs
  $uio_interface = variable_get('infusion_uio_interface', 'Fat Panel Options');
  switch ($uio_interface) {
    case 'Fat Panel Options':
      $variables['page']['page_top']['uio_fat_panel'] = array(
        '#markup' => '<div class="flc-uiOptions-fatPanel fl-uiOptions-fatPanel"> 
                      <div id="myUIOptions" class="flc-slidingPanel-panel flc-uiOptions-iframe"></div>
                      <div class="fl-panelBar"><span class="fl-uio-tabs">
	                <button id="reset" class="flc-uiOptions-reset fl-uiOptions-reset"><span class="fl-icon-undo"></span> Reset</button>
	            	<button id="show-hide" class="flc-slidingPanel-toggleButton fl-uiOptions-showHide"> Show/Hide</button>
            	</span></div>
                      </div>',
        '#attached' => array(
          'css' => array($uio_path . '/components/uiOptions/css/FatPanelUIOptions.css'),
        ),
        '#weight' => 2,
      );
      break;
    case 'Full Page':
      $variables['page']['page_top']['uio_fullpage'] = array(
        '#theme' => 'link',
        '#text' => t('User Interface Options'),
        '#path' => 'uio_full_page',
        '#options' => array(
          'attributes' => array(),
          'html' => FALSE,
        ),
        '#weight' => 2,
      );
      break;
    case 'Full Page With Preview':
      $variables['page']['page_top']['uio_fullpage'] = array(
        '#theme' => 'link',
        '#text' => t('User Interface Options'),
        '#path' => 'uio_full_page_preview',
        '#options' => array(
          'attributes' => array(),
          'html' => FALSE,
        ),
        '#weight' => 2,
      );
      break;
  }
  //Add the container div for the Infusion Table of Contents
  $variables['page']['page_top']['uio_toc'] = array(
    '#markup' => '<div class="flc-toc-tocContainer"> </div>',
    '#weight' => 3,
  );

  //Make sure the admin toolbar if enabled remains at the top
  if (array_key_exists('toolbar', $variables['page']['page_top'])) {
    $variables['page']['page_top']['toolbar']['#weight'] = 1;
  }

  $variables['page']['page_top']['#sorted'] = FALSE;
}

/**
 * Page Callback: Displays the Infusion UIO Full Page without Preview.
 * 
 * @see infusion_uio_menu()
 */
function infusion_uio_fullpage() {

  $output = array(
    '#markup' => '<h1>User Interface Options</h1>        
            <div id="myUIOptions"></div>',
  );
  return $output;
}

/**
 * Page Callback: Displays the Infusion UIO Full Page with Preview.
 * 
 * @see infusion_uio_menu()
 */
function infusion_uio_fullpage_preview() {

  $output = array(
    '#markup' => '<h1>User Interface Options</h1>        
            <div id="myUIOptions"></div>',
  );
  return $output;
}

/**
 * Page Callback: The Fat Panel Frame callback.
 * 
 * @see infusion_uio_menu()
 */
function uio_fatpanel_frame() {

//set up some variables
  $infusion = libraries_get_path('infusion');
  $infusion_module = drupal_get_path('module', 'infusion_uio');
  $jquery_update = drupal_get_path('module', 'jquery_update');
  drupal_add_library('system', 'ui.widget');
  drupal_add_library('system', 'ui.slider');
  drupal_add_library('system', 'ui.mouse');
  $js_files = drupal_get_js();


  $output = '<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:rsf="http://ponder.org.uk/rsf">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />';
  $output .= '<link rel="stylesheet" type="text/css" href="' . $infusion . '/framework/fss/css/fss-reset-global.css" />';
  $output .= '<link rel="stylesheet" type="text/css" href="' . $infusion . '/framework/fss/css/fss-base-global.css" />';
  $output .= '<link rel="stylesheet" type="text/css" href="' . $infusion . '/framework/fss/css/fss-layout.css" />';
  $output .= '<link rel="stylesheet" type="text/css" href="' . $infusion . '/framework/fss/css/fss-text.css" />';
  $output .= '<link rel="stylesheet" type="text/css" href="' . $infusion . '/components/uiOptions/css/fss/fss-theme-bw-uio.css" />';
  $output .= '<link rel="stylesheet" type="text/css" href="' . $infusion . '/components/uiOptions/css/fss/fss-theme-wb-uio.css" />';
  $output .= '<link rel="stylesheet" type="text/css" href="' . $infusion . '/components/uiOptions/css/fss/fss-theme-by-uio.css" />';
  $output .= '<link rel="stylesheet" type="text/css" href="' . $infusion . '/components/uiOptions/css/fss/fss-theme-yb-uio.css" />';
  $output .= '<link rel="stylesheet" type="text/css" href="' . $infusion . '/components/uiOptions/css/fss/fss-text-uio.css" />';

  $output .= '<link rel="stylesheet" type="text/css" href="' . $infusion_module . '/css/fl-theme-bw/bw.css" />';
  $output .= '<link rel="stylesheet" type="text/css" href="' . $infusion_module . '/css/fl-theme-wb/wb.css" />';
  $output .= '<link rel="stylesheet" type="text/css" href="' . $infusion_module . '/css/fl-theme-by/by.css" />';
  $output .= '<link rel="stylesheet" type="text/css" href="' . $infusion_module . '/css/fl-theme-yb/yb.css" />';

  $output .= '<link rel="stylesheet" type="text/css" href="' . $infusion . '/components/uiOptions/css/UIOptions.css" />';
  $output .= '<link rel="stylesheet" type="text/css" href="' . $infusion . '/components/uiOptions/css/FatPanelUIOptionsFrame.css" />';


  $output .= '<!--[if IE 8]>
        <link rel="stylesheet" type="text/css" href="../css/ie8.css" />
    <![endif]--> ';
  $output .= '<title>UI Options</title>';

  $output .= $js_files;
  $output .= '<script src="' . $infusion . '/lib/jquery/plugins/touchPunch/js/jquery.ui.touch-punch.js"></script>';
  $output .= '<script src="' . $infusion . '/lib/json/js/json2.js"></script>';
  $output .= '<script src="' . $infusion . '/MyInfusion.js' . '"></script></head>';
  $output .= '  <body class="fl-uiOptions-fatPanel fl-focus">
    <span class="fl-hidden">
      <div class="flc-toc-tocContainer"></div>
    </span>
  </body>
</html>';
  print $output;
  //drupal_exit();
}

/**
 * Implements hook_page_build().
 */
function infusion_uio_page_build(&$page) {
  $node = current_path();
  $lib_path = libraries_get_path('infusion');
  drupal_add_css(drupal_get_path('module', 'infusion_uio') . '/infusion_uio.css', array('group' => CSS_THEME));
  if ($node == 'uio_full_page') {
    $page['content']['#attached'] = array(
      'css' => array($lib_path . '/components/uiOptions/css/FullNoPreviewUIOptions.css',
        $lib_path . '/components/uiOptions/css/FullUIOptions.css',
      )
    );
  }
  elseif ($node == 'uio_full_page_preview') {
    $page['content']['#attached'] = array(
      'css' => array($lib_path . '/components/uiOptions/css/FullPreviewUIOptions.css',
        $lib_path . '/components/uiOptions/css/FullUIOptions.css',
      )
    );
  }
  elseif (variable_get('infusion_uio_interface') == 'Fat Panel Options') {
    $page['content']['#attached'] = array(
      'css' => array($lib_path . '/components/uiOptions/css/FatPanelUIOptions.css',
      )
    );
  }
  else {
    return;
  }
  //dpm($page);
}